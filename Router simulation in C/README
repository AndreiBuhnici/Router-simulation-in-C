323CC - Buhnici Andrei - George
Tema 1 PCOM. Am implementat următoarele cerințe + descriere:

1. Protocolul ARP
- se intra pe ramura de protocol arp după ce se extrage header-ul specific 
protocolului din ethernet header și se verifica ce fel de arp este 
(request sau reply);
- pentru arp request, routerul verfica daca pachetul este destinat lui
si in caz afirmativ, creeaza un ethernet header auxiliar cu adresa 
sursa drepta interfata pe care a venit , si cu destinatia drept sursa
initiala; transmite înapoi la sursa care a trimis pachetul de request
un nou pachet, de tipul arp reply, cu adresa mac a routerului pe interfata
pe care a venit;
- pentru arp reply, routerul primești pachetul și îl adauga in tabela arp 
mărind dimensiunea cu 1; se creează o coada auxiliara pentru pachetele care 
sunt scoase și nu corespund cautarii curente, revenind la final în coada inițială; 
pentru pachetul care astepta in coada si al carui next hop corespunde cu adresa ip
sursa se va scoate si sa va trimite la sursa fara a se baga inapoi in coada;

2. Procesul de dirijare
- se intra pe ramura de protocol ip (ipv4 mai exact) si se verifica daca pachetul 
este sau nu un pachet de protocol icmp;
- in cazul in care nu este un pachet icmp, se verifica ca checksum-ul cu care pachetul
a venit este corect raportat la checksum-ul efectiv al pachetului, ca ttl-ul este mai mare
decat 1, adica pachetul mai poate face cel putin inca un hop, si ca exista o ruta de la
router pana la adresa destinatie;
- daca toate conditiile sunt indeplinite, atunci se actualizeaza checksum-ul si luam urmatorul
salt spre destinatie;
- daca exista un urmator salt in tabela arp atunci pur si simplu facem sursa pachetului 
routerul, destinatia va fi urmatorul hop si trimitem pachetul;
- in caz contrar adaugam pachetul in coada si trimitem un arp request la vecini;

3. LPM 
- functia get_best_route realizeaza LPM;
- cauta prefixul care corespunde rezultatului operatiei intre adresa ip destinatie cu masca
intrarii curente din tabela de rutare si il va alege pe cel cu masca cea mai mare;
- am facut o cautare binara care ar fi trebuit sa ia cel mai din dreapta element, dar nu pot
sa inteleg de ce nu se intampla asta, asa ca dupa cautarea binara plec de la indexul rezultat
in urma cautarii binare si ma duc cat mai in dreapta pentru a gasi elementul cu masca cea mai mare;

4. ICMP
- tot pe ramura de protocol ip din cerinta de la procesul de dirijare intram pe partea de protocol
icmp din campul de protocol din header ul de ip;
- se preia header ul icmp si se verifica daca nu este NULL, daca este de tipul ECHO si daca este
destinat routerului;
- in cazul in care sunt indeplinite conditiile se trimite un pachet de tipul ECHO REPLY inapoi la 
sursa cu toate informatiile primite ca si raspuns sursei;
- de asemenea, in cazul in care ttl ul scade este mai mic sau egal cu 1 sau nu se gaseste intrarea
in tabela de rutare se vor trimite inapoi la sursa de tipul ICMP_TIME_EXCEEDED si ICMP_DEST_UNREACH
pentru a semnala erorile sursei;

5. Checksum incremental - bonus
- dacă pachetul are TTL ul mai mare decât 1 atunci vom intra pe partea de scădere a TTL ului curent și de actualizare a checksum ului incremental; 
- se retine vechiul ttl, se obține cel nou și se aplica formula conform RFC 1624:
- formula de actualizare a checksum ului incremental este următoarea: 
	new_checksum = old_checksum - !old_ttl - new_ttl - 1;